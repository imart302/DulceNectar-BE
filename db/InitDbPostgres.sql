CREATE TYPE "roles" AS ENUM (
  'USER',
  'ADMIN'
);

CREATE TYPE "gram_types" AS ENUM (
  'l',
  'g'
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(80),
  "last_name" varchar(80),
  "email" varchar(100),
  "password" varchar(255),
  "role" roles DEFAULT 'USER',
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

CREATE TABLE "products" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(45),
  "info" varchar(400),
  "price" decimal(10,2),
  "img_url" varchar(400),
  "category_id" integer,
  "gram" decimal(10,2),
  "stock" integer,
  "type_gram" gram_types,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "reviews" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer,
  "review" varchar(1000),
  "rating" integer,
  "product_id" integer,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "inbox" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255),
  "phone_number" varchar(30),
  "sender_email" varchar(255),
  "message" varchar(2000),
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer,
  "total_gross" decimal(10,2),
  "address" varchar(255),
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "order_products" (
  "order_id" integer,
  "product_id" integer,
  "quantity" integer
);

ALTER TABLE "products" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id") ON DELETE CASCADE;

ALTER TABLE "reviews" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id") ON DELETE CASCADE;

ALTER TABLE "reviews" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "orders" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "order_products" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id") ON DELETE CASCADE;

ALTER TABLE "order_products" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id") ON DELETE CASCADE;
